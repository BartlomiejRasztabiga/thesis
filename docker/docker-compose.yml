version: '3.8'
name: 'thesis'
services:
  axonserver:
    image: axoniq/axonserver:2023.1.2-jdk-17-dev
    hostname: axonserver
    environment:
      - AXONIQ_AXONSERVER_DEVMODE_ENABLED=true
      - AXONIQ_AXONSERVER_STANDALONE=true
    volumes:
      - axonserver-data:/data
      - axonserver-events:/eventdata
      - axonserver-config:/config:ro
    ports:
      - '8024:8024'
      - '8124:8124'
      - '8224:8224'

  restaurant-service:
    image: ghcr.io/bartlomiejrasztabiga/thesis/restaurant:latest
    build:
      context: ../restaurant
      dockerfile: Dockerfile
    ports:
      - '8101:8101'
    depends_on:
      - axonserver
    environment:
      - AXON_AXONSERVER_SERVERS=axonserver

  order-service:
    image: ghcr.io/bartlomiejrasztabiga/thesis/order:latest
    build:
      context: ../order
      dockerfile: Dockerfile
    ports:
      - '8102:8102'
    depends_on:
      - axonserver
    environment:
      - AXON_AXONSERVER_SERVERS=axonserver

  payment-service:
    image: ghcr.io/bartlomiejrasztabiga/thesis/payment:latest
    build:
      context: ../payment
      dockerfile: Dockerfile
    ports:
      - '8103:8103'
    depends_on:
      - axonserver
    environment:
      - AXON_AXONSERVER_SERVERS=axonserver
  
  delivery-service:
    image: ghcr.io/bartlomiejrasztabiga/thesis/delivery:latest
    build:
      context: ../delivery
      dockerfile: Dockerfile
    ports:
      - '8104:8104'
    depends_on:
      - axonserver
    environment:
      - AXON_AXONSERVER_SERVERS=axonserver

  query-service:
    image: ghcr.io/bartlomiejrasztabiga/thesis/query:latest
    build:
      context: ../query
      dockerfile: Dockerfile
    ports:
      - '8105:8105'
    depends_on:
      - axonserver
    environment:
      - AXON_AXONSERVER_SERVERS=axonserver
      - SPRING_DATA_MONGODB_HOST=query-db
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=query
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=password
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin

  query-db:
    image: mongo:7.0.2
    ports:
      - '27105:27017'
    volumes:
      - query-db-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=query
      
  saga-service:
    image: ghcr.io/bartlomiejrasztabiga/thesis/saga:latest
    build:
      context: ../saga
      dockerfile: Dockerfile
    ports:
      - '8106:8106'
    depends_on:
      - axonserver
    environment:
      - AXON_AXONSERVER_SERVERS=axonserver
      - SPRING_DATA_MONGODB_HOST=saga-db
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=saga
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=password
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin

  saga-db:
    image: mongo:7.0.2
    ports:
      - '27106:27017'
    volumes:
      - saga-db-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=saga

  nginx:
    image: nginx:1.25.3
    ports:
      - '8100:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
volumes:
  axonserver-data:
  axonserver-events:
  axonserver-config:
  query-db-data:
  saga-db-data:
